{"version":3,"sources":["Button.jsx","InputField.jsx","Form.jsx","Notification.jsx","Persons.jsx","services/persons.js","App.js","index.js"],"names":["Button","handler","title","type","onClick","InputField","label","value","onChange","Form","fields","submit","map","field","key","Notification","message","state","className","Persons","data","deleteNumber","id","name","number","baseUrl","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","setMessage","useEffect","axios","get","then","messageRemove","setTimeout","clearTimeout","formProps","target","event","preventDefault","person","personFound","find","window","confirm","put","p","catch","error","console","log","post","create","concat","showPersons","filter","toLowerCase","match","delete","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a7c81b5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ handler, title, type = 'button' }) => (\n  <button onClick={handler} type={type}>{title}</button>\n)\n\nexport default Button\n","import React from 'react';\n\nconst InputField = ({ label, handler, value }) => (\n  <div>\n    { label }:\n    {' '}\n    <input onChange={handler} type=\"text\" value={value} />\n  </div>\n)\n\nexport default InputField\n","import React from 'react';\n\nimport Button from './Button'\nimport InputField from './InputField'\n\nconst Form = ( { fields, submit }) => (\n  <form>\n  {\n    fields.map((field) => <InputField {...field} key={field.label} />)\n  }\n  <Button {...submit} type=\"submit\" />\n</form>\n)\n\nexport default Form\n","import React from 'react'\n\nconst Notification = ({ message, state }) => (\n  <div className={`notification ${state}`}>{message}</div>\n)\n\nexport default Notification","import React from 'react'\n\nimport Button from './Button'\n\nconst Persons = ({ data, deleteNumber }) => {\n\n  const handler = (id, name) => () => deleteNumber(id, name)\n\n  return (\n    <ul>\n      {\n        data.map(({ id, name, number }) => (\n          <li key={name}>{name} {number} <Button handler={handler(id, name)} title=\"Delete\" /></li>\n        ))\n      }\n    </ul>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst create = (person) => axios.post(baseUrl, person).then(({ data }) => data)\n\nconst deletePerson = (id) => axios.delete(`${baseUrl}/${id}`)\n\nconst getAll = () => axios.get(baseUrl).then(({ data }) => data)\n\nconst updateNumber = (person) => axios.put(`${baseUrl}/${person.id}`, person).then(({ data }) => data)\n\nexport { create, deletePerson, getAll, updateNumber  }","import React, { useEffect, useState } from 'react'\n\n// Components\nimport Form from './Form'\nimport InputField from './InputField'\nimport Notification from './Notification'\nimport Persons from './Persons'\n\n// Services\nimport { create, deletePerson, getAll, updateNumber } from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState(null)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    getAll().then(data => {\n      setPersons(data)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (message) {\n      const messageRemove = setTimeout(() => setMessage(null), 5000)\n\n      return () => clearTimeout(messageRemove)\n    }\n  }, [message, setMessage])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const personFound = persons.find(({ name }) => name === newName);\n    if (personFound) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        updateNumber({ ...personFound, number: newNumber }).then(person => {\n          setPersons((state) => state.map((p) => p.id === person.id ? person : p))\n          setMessage({ message: `Updated ${newName}'s number on the phonebook.`, state: 'success' })\n        }).catch(error => {\n          console.log(error.message)\n          setMessage({ message: 'An error occured', state: 'error' })\n        })\n      }\n    } else {\n      create({ name: newName, number: newNumber }).then(person => {\n        setPersons((state) => state.concat(person))\n        setMessage({ message: `Added ${newName} to phonebook.`, state: 'success' })\n      }).catch(error => {\n        console.log(error.message)\n        setMessage({ message: 'An error occured', state: 'error' })\n      })\n    }\n  }\n\n  const deleteNumber = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      deletePerson(id).then(() => {\n        setPersons((state) => state.filter((person) => person.id !== id))\n        setMessage({ message: `Deleted ${name} from the phonebook.`, state: 'success' })\n      }).catch(error => {\n        console.log(error.message)\n        setMessage({ message: `${name} has already been removed from server.`, state: 'error' })\n      })\n    }\n  }\n\n  const updateNameField = ({ target }) => setNewName(target.value)\n  \n  const updateNumberField = ({ target }) => setNewNumber(target.value)\n\n  const updateSearchValue = ({ target }) => setSearch(target.value)\n\n  const formProps = {\n    fields: [\n      {\n        handler: updateNameField,\n        label: 'Name',\n        value: newName\n      },\n      {\n        handler: updateNumberField,\n        label: 'Number',\n        value: newNumber\n      }\n    ],\n    submit: {\n      handler: addNewPerson,\n      title: 'Add'\n    }\n  }\n\n  const showPersons = search === '' ? persons : persons.filter(({ name, number }) => (\n    name.toLowerCase().match(search.toLowerCase()) || number.toLowerCase().match(search.toLowerCase()) \n  ))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {\n        message && (\n          <Notification {...message} />\n        )\n      }\n      <InputField label=\"Search person or number\" handler={updateSearchValue} value={search} />\n      <h2>Add a new</h2>\n      <Form {...formProps} />\n      {\n        showPersons && (\n          <>\n            <h2>Numbers</h2>\n            <Persons data={showPersons} deleteNumber={deleteNumber} />\n          </>\n        )\n      }\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}